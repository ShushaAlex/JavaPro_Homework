Реализуйте класс UnidirectionIntLinkedList, в есть следующие характериcтики:

int size; (текущий размер списка)

Node (структура для хранения первого элемента списка)
В классе Node инкапcулированы характеристики:

int item; (для хранения данных)

Node next; (для хранения ссылки на следующий объект хранения)
В классе UnidirectionIntLinkedList реализовать следующие методы:

add(int): этот метод используется для добавления элемента в конец !!! списка.

add(index, int): этот метод используется для добавления элемента по определенному индексу !!! в список.

addFirst(int значение): добавляет элемент в начало списка.

addLast(int значение): добавляет элемент в конец списка.

int get(int index): получить элемент по index.

int set(int index, int значение): установить значение элемента по index.

int remove(int index): удалить элемент со списка, возвратить значение удаленного элемента

removeFirst(): удалить элемент с начала списка.

removeLast(): удалить элемент с конца списка.

int indexOf(int значение): вернуть индекс первого вхождение элемента со значением

bool contains(int значение): вернуть true, если значение есть в списке

void clear(): очистить список


2.
a)
Найти сумму всех элементов ArrayList.
Найти среднее значение элементов LinkedList.
Перебрать ArrayList и вывести все элементы на экран.
Перебрать LinkedList и найти самую длинную строку.
Создать ArrayList с объектами вашего собственного класса и вывести их на экран.


b)
Перебрать ArrayList и найти наименьший элемент.
Перебрать LinkedList и найти наибольший элемент.
Перебрать ArrayList и найти количество элементов, начинающихся с определенной буквы.
Перебрать LinkedList и найти первое вхождение определенной строки.
Создать LinkedList с объектами вашего собственного класса и удалить все элементы, удовлетворяющие определенному условию.


c)
Перебрать ArrayList и удалить все четные числа.
Перебрать LinkedList и заменить все элементы, кратные 3, на нули.
Перебрать ArrayList и объединить все элементы в одну строку.
Перебрать LinkedList и удалить все элементы, содержащие определенную подстроку.
Создать ArrayList с объектами вашего собственного класса и вывести только те, которые удовлетворяют определенному условию.


d)
Перебрать ArrayList и найти сумму квадратов всех элементов.
Перебрать LinkedList и вычислить произведение всех элементов.
Перебрать ArrayList и найти самую короткую строку.
Перебрать LinkedList и заменить все гласные буквы в каждой строке на символ '*'.
Создать LinkedList с объектами вашего собственного класса и отсортировать их в порядке убывания.


e)
Перебрать ArrayList и найти второй по величине элемент.
Перебрать LinkedList и вывести все элементы в обратном порядке.
Перебрать ArrayList и вывести все строки, содержащие только буквы.
Перебрать LinkedList и найти самую длинную строку, не содержащую пробелов.
Создать ArrayList с объектами вашего собственного класса и отфильтровать только уникальные элементы.


f)
Перебрать ArrayList и найти наибольшую возрастающую последовательность элементов.
Перебрать LinkedList и удалить все дубликаты элементов.
Перебрать ArrayList и создать новый список, содержащий только уникальные строки.
Перебрать LinkedList и объединить все строки в одну с использованием разделителя.
Создать LinkedList с объектами вашего собственного класса и отсортировать их по нескольким критериям.